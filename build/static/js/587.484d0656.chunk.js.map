{"version":3,"file":"static/js/587.484d0656.chunk.js","mappings":"0LA4CA,IAxCa,SAAC,GAAiC,IAA/BA,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACtBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,WACvBF,EAAS,IAAD,OAAKD,GACf,EAED,OACG,UAAC,KAAD,CACGI,EAAE,OACFC,UAAU,SACVC,IAAIC,EAAAA,EAAAA,IAAkB,eAAgB,eACtCC,EAAG,CAAEC,KAAM,QAASC,GAAI,OAAQC,GAAI,UACpCC,aAAa,MACbC,MAAM,SACNC,UAAW,CAAEL,KAAM,MAAOC,GAAI,UAPjC,WASG,SAAC,KAAD,CACGK,IAAKjB,EACLkB,IAAI,UACJC,QAAS,CAAER,KAAM,OAAQC,GAAI,QAC7BQ,UAAU,QACVC,QAAQ,OACRC,GAAI,CAAEV,GAAI,SACVW,GAAI,CAAEZ,KAAM,QAASC,GAAI,KACzBY,OAAO,UACPC,QAASpB,KAEZ,SAAC,KAAD,CACGqB,SAAS,SACTC,OAAOlB,EAAAA,EAAAA,IAAkB,qBAAsB,qBAC/Ce,OAAO,UACPC,QAASpB,EAJZ,SAMIJ,MAIZ,C,gHCGD,UAtCiB,WAAO,IAAD,EACd2B,GAAOC,EAAAA,EAAAA,KACLC,GAAgBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,WAAjB,IAA5BA,YAEFG,GACQ,OAAXH,QAAW,IAAXA,GAAA,UAAAA,EACKI,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAOR,EAAKS,MAAnC,IACNC,iBAFJ,eAEeC,KAAI,SAACH,GAAD,OAAQA,CAAR,MAAe,GAE/BE,EAAS,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAaU,QAAO,SAACL,GAAD,OACnCF,EAAWQ,SAASN,EAASC,GADM,IAItC,OAAKE,EAAUI,QAKZ,SAAC,KAAD,CACGC,QAAQ,OACRC,oBAAqB,CAClBhC,GAAI,4BACJC,GAAI,6BAEPgC,IAAK,CAAEjC,GAAI,SANd,SAQI0B,EAAUC,KAAI,SAACJ,GAAD,OACZ,SAAC,IAAD,CAEGlC,KAAMkC,EAASlC,KACfC,SAAUiC,EAASjC,SACnBF,QAASmC,EAASnC,SAHbmC,EAASC,GAFL,OAZX,SAAC,IAAD,CAAeU,MAAK,qCAsBhC,C,wECpBD,IApBsB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7B,OACG,UAAC,KAAD,CACGC,KAAK,IACLC,GAAI,CAAC,QAAS,QAAS,QACvBC,GAAG,OACHpC,aAAa,MACbN,IAAIC,EAAAA,EAAAA,IAAkB,eAAgB,eACtCF,UAAU,SACV4C,GAAI,CAAExC,KAAM,eAAgByC,GAAI,oBAChCT,QAAQ,OACRU,WAAW,SACXC,cAAc,SAVjB,WAYG,SAAC,KAAD,CAAMC,UAAU,SAAhB,SAA0BT,IACzBC,IAGT,C","sources":["components/dashboard/Card.jsx","components/dashboard/Follower.jsx","components/dashboard/NoDataMessage.jsx"],"sourcesContent":["import { Flex, Heading, Image, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Card = ({ profile, name, username }) => {\n   const navigate = useNavigate();\n\n   const handleViewProfile = () => {\n      navigate(`/${username}`);\n   };\n\n   return (\n      <Flex\n         w='100%'\n         className='shadow'\n         bg={useColorModeValue('light.cardBg', 'dark.cardBg')}\n         p={{ base: '.5rem', sm: '1rem', lg: '1.5rem' }}\n         borderRadius='5px'\n         align='center'\n         direction={{ base: 'row', sm: 'column' }}\n      >\n         <Image\n            src={profile}\n            alt='profile'\n            boxSize={{ base: '50px', sm: '64px' }}\n            objectFit='cover'\n            rounded='full'\n            mb={{ sm: '.5rem' }}\n            mr={{ base: '.5rem', sm: '0' }}\n            cursor='pointer'\n            onClick={handleViewProfile}\n         />\n         <Heading\n            fontSize='1.2rem'\n            color={useColorModeValue('light.headingHover', 'dark.headingHover')}\n            cursor='pointer'\n            onClick={handleViewProfile}\n         >\n            {name}\n         </Heading>\n      </Flex>\n   );\n};\n\nexport default Card;\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAuth } from '../../context/auth';\nimport Card from './Card';\nimport NoDataMessage from './NoDataMessage';\n\nconst Follower = () => {\n   const user = useAuth();\n   const { profileData } = useSelector((state) => state.profileData);\n\n   const followerId =\n      profileData\n         ?.find((userData) => userData.id === user.userId)\n         .followers?.map((id) => id) || [];\n\n   const followers = profileData?.filter((userData) =>\n      followerId.includes(userData.id)\n   );\n\n   if (!followers.length) {\n      return <NoDataMessage title={`You don't have any followers yet.`} />;\n   }\n\n   return (\n      <Box\n         display='grid'\n         gridTemplateColumns={{\n            sm: 'repeat(2, minmax(0, 1fr))',\n            lg: 'repeat(3, minmax(0, 1fr))',\n         }}\n         gap={{ sm: '.7rem' }}\n      >\n         {followers.map((userData) => (\n            <Card\n               key={userData.id}\n               name={userData.name}\n               username={userData.username}\n               profile={userData.profile}\n            />\n         ))}\n      </Box>\n   );\n};\n\nexport default Follower;\n","import { Box, Text, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nconst NoDataMessage = ({ title, children }) => {\n   return (\n      <Box\n         flex='1'\n         px={['.5rem', '.5rem', '1rem']}\n         py='7rem'\n         borderRadius='5px'\n         bg={useColorModeValue('light.cardBg', 'dark.cardBg')}\n         className='shadow'\n         ms={{ base: '0 !important', md: '.5rem !important' }}\n         display='flex'\n         alignItems='center'\n         flexDirection='column'\n      >\n         <Text textAlign='center'>{title}</Text>\n         {children}\n      </Box>\n   );\n};\n\nexport default NoDataMessage;\n"],"names":["profile","name","username","navigate","useNavigate","handleViewProfile","w","className","bg","useColorModeValue","p","base","sm","lg","borderRadius","align","direction","src","alt","boxSize","objectFit","rounded","mb","mr","cursor","onClick","fontSize","color","user","useAuth","profileData","useSelector","state","followerId","find","userData","id","userId","followers","map","filter","includes","length","display","gridTemplateColumns","gap","title","children","flex","px","py","ms","md","alignItems","flexDirection","textAlign"],"sourceRoot":""}