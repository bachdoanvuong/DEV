{"version":3,"file":"static/js/266.fbad9056.chunk.js","mappings":"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","sources":["pages/Error.jsx","components/profile/TopLayer.jsx","components/profile/ProfileLeftPart.jsx","components/skeletons/ProfileSkeleton.jsx","components/profile/ProfileRightPart.jsx","pages/Profile.jsx"],"sourcesContent":["import React from 'react';\nimport { Heading, Image, Text, VStack } from '@chakra-ui/react';\nimport dev_ghost from '../assets/images/devGhost.webp';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nconst Error = () => {\n   const navigate = useNavigate();\n\n   useEffect(() => {\n      const header = document.querySelector('.header');\n      const footer = document.querySelector('.footer');\n\n      if (header) {\n         header.style.display = 'none';\n      }\n\n      if (footer) {\n         footer.style.display = 'none';\n      }\n   }, []);\n\n   return (\n      <VStack justify='center' h='calc(100vh - 120px)'>\n         <Image src={dev_ghost} alt='dev_ghost' />\n         <Heading mt='0 !important' fontSize='5xl'>\n            404\n         </Heading>\n         <Heading mt='0 !important' fontSize='2xl'>\n            Page not found !\n         </Heading>\n         <Text\n            color='light.primary'\n            cursor='pointer'\n            _hover={{ color: 'rgb(103 115 237 / 91%)' }}\n            onClick={() => navigate('/')}\n         >\n            Back to home\n         </Text>\n      </VStack>\n   );\n};\n\nexport default Error;\n","import React from 'react';\nimport {\n   Box,\n   Button,\n   Flex,\n   Heading,\n   HStack,\n   Image,\n   Link,\n   Text,\n   useColorModeValue,\n   Wrap,\n} from '@chakra-ui/react';\nimport { BsGithub, BsTwitter } from 'react-icons/bs';\nimport { MdEmail } from 'react-icons/md';\nimport { LightBtn, PrimaryBtn } from '../../utils/Buttons';\nimport { useAuth } from '../../context/auth';\nimport defaultProfile from '../../assets/images/default_profile.webp';\nimport { joinOnDate } from '../../helper/calcTimestamp';\nimport useFollowUser from '../../hooks/useFollowUser';\nimport { joinOn, location, personalWebsite } from '../../assets/icons';\n\nconst LinkIcon = ({ hoverColor, href, children, onClick }) => {\n   return (\n      <Link\n         href={href}\n         _hover={{ svg: { color: hoverColor } }}\n         target='blank'\n         onClick={onClick}\n      >\n         {children}\n      </Link>\n   );\n};\n\nconst TopLayer = ({ profileData, moreInfo, setMoreInfo }) => {\n   const user = useAuth();\n   const userId = user?.userId;\n\n   const { handleClickFollow, loading } = useFollowUser(profileData, userId);\n\n   const alreadyFollow = profileData?.followers?.includes(userId);\n\n   const dividerColor = useColorModeValue(\n      'rgb(23 23 23 / 5%)',\n      'rgb(255 255 255 / 10%)'\n   );\n   const nameColor = useColorModeValue('#090909', '#f9f9f9');\n   const bioColor = useColorModeValue('#242424', '#efefef');\n   const socialColor = useColorModeValue('#717171', '#a3a3a3');\n   const ghostColor = useColorModeValue('light.ghostColor', 'dark.ghostColor');\n   const iconHoverColor = useColorModeValue(\n      'rgb(23, 23, 23)',\n      'rgb(250, 250, 250)'\n   );\n   const urlHover = useColorModeValue(\n      'light.headingHover',\n      'dark.headingHover'\n   );\n   const colorTertiary = useColorModeValue(\n      'light.colorTertiary',\n      'dark.colorTertiary'\n   );\n\n   const borderColor = useColorModeValue('#d6d6d7', '#66686c');\n   const hoverBtnColor = useColorModeValue('#F6F6F6', '#1F1F1F');\n\n   const Work = ({ title, text }) => {\n      return (\n         <Box\n            px={{ base: '0', md: '1rem' }}\n            flex={1}\n            textAlign={{ base: 'start', md: 'center' }}\n         >\n            <Text fontWeight={700} color={colorTertiary}>\n               {title}\n            </Text>\n            <Text letterSpacing='.5px' color={ghostColor}>\n               {text}\n            </Text>\n         </Box>\n      );\n   };\n\n   return (\n      <Box\n         className='shadowSecondary'\n         bg={useColorModeValue('light.cardBg', 'dark.cardBg')}\n         mt='-3.5rem'\n         borderRadius={['0', '0', '5px']}\n         pos='relative'\n         p={{ base: '1rem .5rem', md: '1rem' }}\n         textAlign={{ base: 'start', md: 'center' }}\n      >\n         <Box\n            boxSize={{ base: '60px', md: '120px' }}\n            pos='absolute'\n            top={{ base: '-30px', md: '-60px' }}\n            left={{ base: '2.5rem', md: '50%' }}\n            transform='translateX(-50%)'\n            borderWidth={{\n               md: '7px ',\n               base: '4px ',\n            }}\n            borderColor={profileData?.background || '#000000'}\n            rounded='full'\n            backgroundImage={profileData?.profile || defaultProfile}\n            backgroundColor={profileData?.background || '#000000'}\n            backgroundPosition='center'\n            backgroundRepeat='no-repeat'\n            backgroundSize='cover'\n         />\n\n         <HStack justify='flex-end' mb={{ md: '1.5rem' }} h='40px'>\n            {!alreadyFollow && (\n               <PrimaryBtn\n                  bg='light.primary'\n                  onClick={handleClickFollow}\n                  disabled={loading}\n               >\n                  {profileData?.id === userId ? 'Edit Profile' : 'Follow'}\n               </PrimaryBtn>\n            )}\n\n            {alreadyFollow && (\n               <LightBtn\n                  w='100px'\n                  onClick={handleClickFollow}\n                  disabled={loading}\n               >\n                  Following\n               </LightBtn>\n            )}\n         </HStack>\n\n         {profileData && (\n            <Box>\n               <Heading fontSize={['1.5rem', '1.7rem']} color={nameColor}>\n                  {profileData.name}\n               </Heading>\n\n               <Text\n                  fontSize={{ md: '17px' }}\n                  letterSpacing='.5px'\n                  color={profileData.bio ? bioColor : ghostColor}\n                  mt='.3rem'\n                  maxW={{ base: '100%', md: '70%' }}\n                  mx='auto'\n               >\n                  {profileData?.bio?.trim().length\n                     ? profileData.bio\n                     : '404 bio not found'}\n               </Text>\n\n               <Wrap\n                  display='flex'\n                  justifyContent={{ base: 'flex-start', md: 'center' }}\n                  mt='1rem'\n                  fontSize='15px'\n                  spacing={3}\n                  color={socialColor}\n               >\n                  {profileData?.location && (\n                     <HStack>\n                        <Image src={location} alt='icon' />\n                        <Text>{profileData.location}</Text>\n                     </HStack>\n                  )}\n\n                  {profileData?.createdAt && (\n                     <HStack>\n                        <Image src={joinOn} alt='icon' />\n                        <Text>\n                           Joined on {joinOnDate(profileData.createdAt)}\n                        </Text>\n                     </HStack>\n                  )}\n\n                  {profileData?.website && (\n                     <HStack cursor='pointer'>\n                        <Image src={personalWebsite} alt='icon' />\n                        <Link\n                           _hover={{ color: urlHover }}\n                           href={profileData.website}\n                           target='blank'\n                        >\n                           {profileData?.website}\n                        </Link>\n                     </HStack>\n                  )}\n\n                  <HStack>\n                     {profileData?.github && (\n                        <LinkIcon\n                           href={profileData.github}\n                           hoverColor={iconHoverColor}\n                        >\n                           <BsGithub size={22} title='Github' />\n                        </LinkIcon>\n                     )}\n\n                     {profileData?.twitter && (\n                        <LinkIcon\n                           href={profileData.twitter}\n                           hoverColor='#1da1f2'\n                        >\n                           <BsTwitter size={23} title='Twitter' />\n                        </LinkIcon>\n                     )}\n\n                     {profileData?.email && (\n                        <LinkIcon\n                           hoverColor={iconHoverColor}\n                           onClick={() =>\n                              window.open(`mailto:${profileData.email}`)\n                           }\n                        >\n                           <MdEmail size={23} title='Email' />\n                        </LinkIcon>\n                     )}\n                  </HStack>\n               </Wrap>\n\n               {(profileData?.education || profileData?.work) && (\n                  <Flex\n                     flexDirection={{ base: 'column', md: 'row' }}\n                     gap={2}\n                     borderTop='1px solid'\n                     borderTopColor={dividerColor}\n                     mt='2rem'\n                     pt={['.5rem', '.5rem', '1rem']}\n                  >\n                     {profileData?.education && (\n                        <Work title='Education' text={profileData.education} />\n                     )}\n                     {profileData?.work && (\n                        <Work title='Work' text={profileData.work} />\n                     )}\n                  </Flex>\n               )}\n\n               {/* more info button */}\n               <Button\n                  display={{ base: !moreInfo ? 'block' : 'none', md: 'none' }}\n                  w='100%'\n                  mx='auto'\n                  mt='5'\n                  bg='transparent'\n                  whiteSpace='normal'\n                  transition='.3s'\n                  border='2px solid'\n                  borderColor={borderColor}\n                  onClick={() => setMoreInfo(true)}\n                  _hover={{ bg: hoverBtnColor }}\n                  py='.5rem'\n                  height='auto'\n               >\n                  More info about @{profileData.username}\n               </Button>\n            </Box>\n         )}\n      </Box>\n   );\n};\n\nexport default TopLayer;\n","import React from 'react';\nimport {\n   Box,\n   Divider,\n   HStack,\n   Image,\n   Text,\n   useColorModeValue,\n} from '@chakra-ui/react';\nimport { doc, commentLg, tag } from '../../assets/icons';\n\nconst ProfileLeftPart = ({\n   publishedPosts,\n   profileData,\n   display,\n   totalCommentWritten,\n}) => {\n   const cardBg = useColorModeValue(\n      'light.cardSecondaryBg',\n      'dark.cardSecondaryBg'\n   );\n\n   const cardColor = useColorModeValue(\n      'light.cardSecondaryColor',\n      'dark.cardSecondaryColor'\n   );\n\n   const ghostColor = useColorModeValue('light.ghostColor', 'dark.ghostColor');\n\n   const TechStack = ({ title, text }) => {\n      return (\n         <Box\n            bg={cardBg}\n            color={cardColor}\n            p={{ base: '1rem .5rem', md: '1rem' }}\n            borderRadius='5px'\n            mb={{ base: 1, md: 3 }}\n            className='shadowSecondary'\n         >\n            <Text fontWeight={700} fontSize='18px' color={cardColor}>\n               {title}\n            </Text>\n            <Divider mt={3} mb={5} />\n            <Text color={ghostColor}>{text}</Text>\n         </Box>\n      );\n   };\n\n   const totalFollowingTags = profileData.followingTags?.length || 0;\n\n   return (\n      <Box\n         m={{ base: '0 0 1rem 0', md: '0 1rem 0 0' }}\n         flex={{ base: 'unset', md: '1' }}\n         w={{ base: '100%' }}\n         display={display}\n      >\n         {profileData.learning && (\n            <TechStack title='Currently Learning' text={profileData.learning} />\n         )}\n\n         {profileData.skills && (\n            <TechStack title='Skills/Languages' text={profileData.skills} />\n         )}\n\n         {profileData.hacking && (\n            <TechStack\n               title='Currently hacking on'\n               text={profileData.hacking}\n            />\n         )}\n\n         {profileData.avaliable && (\n            <TechStack title='Available for' text={profileData.avaliable} />\n         )}\n\n         <Box\n            className='shadowSecondary'\n            bg={cardBg}\n            color={cardColor}\n            p={{ base: '1.5rem .5rem', md: '1.5rem 1rem' }}\n            borderRadius='5px'\n         >\n            <HStack mb='.7rem'>\n               <Image src={doc} alt='doc_icon' />\n               <Text>\n                  {publishedPosts} {publishedPosts > 1 ? 'posts' : 'post'}{' '}\n                  published\n               </Text>\n            </HStack>\n\n            <HStack mb='.7rem'>\n               <Image src={commentLg} alt='comment_icon' />\n               <Text>\n                  {totalCommentWritten}{' '}\n                  {totalCommentWritten > 1 ? 'comments' : 'comment'} written\n               </Text>\n            </HStack>\n\n            <HStack>\n               <Image src={tag} alt='tag_icon' />\n               <Text>\n                  {totalFollowingTags} {totalFollowingTags > 1 ? 'tags' : 'tag'}{' '}\n                  followed\n               </Text>\n            </HStack>\n         </Box>\n      </Box>\n   );\n};\n\nexport default ProfileLeftPart;\n","import React from 'react';\nimport {\n   Box,\n   Skeleton,\n   SkeletonCircle,\n   useColorModeValue,\n} from '@chakra-ui/react';\nimport useSkeletonColor from '../../hooks/useSkeletonColor';\n\nconst ProfileSkeleton = () => {\n   const skeletonColor = useSkeletonColor();\n\n   return (\n      <Box flex='1' w='100%'>\n         <Skeleton {...skeletonColor} h={['7rem', '7rem', '9rem']} />\n\n         <Box mx={{ base: 'none', md: '.5rem' }}>\n            <Box maxW='1000px' mx='auto'>\n               <Box\n                  bg={useColorModeValue('light.cardBg', 'dark.cardBg')}\n                  mt='-3.5rem'\n                  borderRadius={{ md: '5px' }}\n                  pos='relative'\n                  p={{ base: '.5rem .5rem 2rem', md: '1rem 1rem 2rem' }}\n                  textAlign={{ base: 'start', md: 'center' }}\n               >\n                  <SkeletonCircle\n                     {...skeletonColor}\n                     boxSize={{ base: '60px', md: '120px' }}\n                     pos='absolute'\n                     top={{ base: '-30px', md: '-60px' }}\n                     left={{ base: '2.5rem', md: '50%' }}\n                     transform='translateX(-50%)'\n                  />\n\n                  <Skeleton\n                     {...skeletonColor}\n                     h='20px'\n                     mt={['2rem', '2rem', '4rem']}\n                     maxW='220px'\n                     mx={{ md: 'auto' }}\n                  />\n\n                  <Skeleton\n                     {...skeletonColor}\n                     h='15px'\n                     mt='.5rem'\n                     maxW='600px'\n                     mx={{ md: 'auto' }}\n                  />\n\n                  <Skeleton\n                     {...skeletonColor}\n                     h='15px'\n                     my='.5rem'\n                     maxW='600px'\n                     mx={{ md: 'auto' }}\n                  />\n               </Box>\n            </Box>\n         </Box>\n      </Box>\n   );\n};\n\nexport default ProfileSkeleton;\n","import { Box, Button, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { useAuth } from '../../context/auth';\nimport {\n   calcTotalDiscussion,\n   calculateReaction,\n} from '../../helper/calculateTotal';\nimport PostItem from '../post/PostItem';\nimport { BsFillPinAngleFill } from 'react-icons/bs';\n\nconst ProfileRightPart = ({ pinnedPosts, otherPosts }) => {\n   const user = useAuth();\n   const userId = user?.userId;\n\n   return (\n      <Box flex={{ base: 'unset', md: '2' }} borderRadius='5px' w='100%'>\n         {pinnedPosts && pinnedPosts.length !== 0 && (\n            <Box\n               border='2px solid rgb(59 73 223)'\n               borderRadius='5px'\n               mb='.5rem'\n               p={{ base: '.7rem .7rem .3rem', md: '1rem 1rem .5rem' }}\n            >\n               <Box as='header'>\n                  <Button\n                     bg='light.primary'\n                     _hover={{ bg: 'light.primary' }}\n                     m={{ base: '-2rem 0 0 0', md: '-2.5rem 0 0' }}\n                     _active={{ bg: 'light.primary' }}\n                     cursor='default'\n                     color='dark.color'\n                  >\n                     <BsFillPinAngleFill size={19} />\n                     <Text fontWeight={700} ms='.5rem'>\n                        Pinned\n                     </Text>\n                  </Button>\n               </Box>\n\n               {pinnedPosts.map((postData) => (\n                  <PostItem\n                     key={postData.id}\n                     name={postData.name}\n                     username={postData.username}\n                     profile={postData.profile}\n                     id={postData.id}\n                     createdAt={postData.createdAt}\n                     title={postData.title}\n                     tags={postData.tags}\n                     readTime={postData.readTime}\n                     isUpdated={postData?.updated}\n                     userId={postData.userId}\n                     currentUserId={userId} // authenticated userId\n                     totalDiscussion={calcTotalDiscussion(postData.comments)}\n                     totalReaction={calculateReaction(\n                        postData.heart,\n                        postData.unicorn,\n                        postData.saved\n                     )}\n                     saved={postData.saved}\n                     alreadySaved={postData.saved?.includes(userId)}\n                     baseRadius='5px'\n                  />\n               ))}\n            </Box>\n         )}\n\n         {otherPosts &&\n            otherPosts.map((postData) => (\n               <PostItem\n                  key={postData.id}\n                  name={postData.name}\n                  username={postData.username}\n                  profile={postData.profile}\n                  id={postData.id}\n                  createdAt={postData.createdAt}\n                  title={postData.title}\n                  tags={postData.tags}\n                  readTime={postData.readTime}\n                  isUpdated={postData?.updated}\n                  userId={postData.userId}\n                  currentUserId={userId} // authenticated userId\n                  totalDiscussion={calcTotalDiscussion(postData.comments)}\n                  totalReaction={calculateReaction(\n                     postData.heart,\n                     postData.unicorn,\n                     postData.saved\n                  )}\n                  saved={postData.saved}\n                  alreadySaved={postData.saved?.includes(userId)}\n               />\n            ))}\n      </Box>\n   );\n};\n\nexport default ProfileRightPart;\n","import { Box, Flex } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport TopLayer from '../components/profile/TopLayer';\nimport ProfileLeftPart from '../components/profile/ProfileLeftPart';\nimport ErrorMessage from '../utils/ErrorMessage';\nimport ProfileSkeleton from '../components/skeletons/ProfileSkeleton';\nimport { claculateWrittenComments } from '../helper/calculateTotal';\nimport ProfileRightPart from '../components/profile/ProfileRightPart';\nimport Error from './Error';\n\nconst Profile = () => {\n   // scroll top\n   const location = useLocation();\n\n   useEffect(() => window.scrollTo(0, 0), [location]);\n\n   const { username } = useParams();\n   const [moreInfo, setMoreInfo] = useState(false);\n\n   const { profileData, profileDataLoading, profileDataErr } = useSelector(\n      (state) => state.profileData\n   );\n\n   const { transformedData } = useSelector((state) => state.transformedData);\n\n   let currentUserProfile = null;\n   let userId;\n   if (profileData) {\n      currentUserProfile = profileData.find(\n         (data) => data.username === username\n      );\n\n      userId = currentUserProfile?.id;\n   }\n\n   if (profileDataErr) {\n      return <ErrorMessage offline={true} />;\n   }\n\n   if (!currentUserProfile && !profileDataLoading) {\n      return <Error />;\n   }\n\n   if (profileDataLoading) {\n      return <ProfileSkeleton />;\n   }\n\n   let pinnedPosts = null;\n   let otherPosts = null;\n   let totalCommentWritten = 0;\n\n   if (transformedData) {\n      otherPosts = transformedData\n         .filter(\n            (postData) =>\n               postData.userId === userId && !postData.draft && !postData.pinned\n         )\n         .sort((a, b) => b.createdAt - a.createdAt);\n\n      pinnedPosts = transformedData\n         .filter((postData) => postData.userId === userId && postData.pinned)\n         .sort((a, b) => b.createdAt - a.createdAt);\n\n      totalCommentWritten = transformedData.reduce(\n         (count, postItem) =>\n            count + claculateWrittenComments(postItem.comments, userId),\n         0\n      );\n   }\n\n   const totalPublishPosts =\n      (pinnedPosts?.length || 0) + (otherPosts?.length || 0);\n\n   return (\n      <Box mt='-.5rem !important' w='100%' flex='1'>\n         <Box\n            h={['7rem', '7rem', '9rem']}\n            background={currentUserProfile?.background || '#000000'}\n         />\n         <Box mx={{ base: 'none', md: '.5rem' }}>\n            <Box maxW='1000px' mx='auto'>\n               <TopLayer\n                  profileData={currentUserProfile}\n                  moreInfo={moreInfo}\n                  setMoreInfo={setMoreInfo}\n               />\n\n               {/* bottom layer */}\n               <Flex\n                  mt='1rem'\n                  align='flex-start'\n                  flexDir={{ base: 'column', md: 'row' }}\n               >\n                  {/* left */}\n                  <ProfileLeftPart\n                     publishedPosts={totalPublishPosts}\n                     profileData={currentUserProfile}\n                     totalCommentWritten={totalCommentWritten}\n                     display={{\n                        base: !moreInfo && 'none',\n                        md: 'block',\n                     }}\n                  />\n\n                  {/* right */}\n                  <ProfileRightPart\n                     pinnedPosts={pinnedPosts}\n                     otherPosts={otherPosts}\n                  />\n               </Flex>\n            </Box>\n         </Box>\n      </Box>\n   );\n};\n\nexport default Profile;\n"],"names":["navigate","useNavigate","useEffect","header","document","querySelector","footer","style","display","justify","h","src","dev_ghost","alt","mt","fontSize","color","cursor","_hover","onClick","LinkIcon","hoverColor","href","children","svg","target","profileData","moreInfo","setMoreInfo","user","useAuth","userId","useFollowUser","handleClickFollow","loading","alreadyFollow","followers","includes","dividerColor","useColorModeValue","nameColor","bioColor","socialColor","ghostColor","iconHoverColor","urlHover","colorTertiary","borderColor","hoverBtnColor","Work","title","text","px","base","md","flex","textAlign","fontWeight","letterSpacing","className","bg","borderRadius","pos","p","boxSize","top","left","transform","borderWidth","background","rounded","backgroundImage","profile","defaultProfile","backgroundColor","backgroundPosition","backgroundRepeat","backgroundSize","mb","disabled","id","w","name","bio","maxW","mx","trim","length","justifyContent","spacing","location","createdAt","joinOn","joinOnDate","website","personalWebsite","github","size","twitter","email","window","open","education","work","flexDirection","gap","borderTop","borderTopColor","pt","whiteSpace","transition","border","py","height","username","publishedPosts","totalCommentWritten","cardBg","cardColor","TechStack","totalFollowingTags","followingTags","m","learning","skills","hacking","avaliable","doc","commentLg","tag","skeletonColor","useSkeletonColor","my","pinnedPosts","otherPosts","as","_active","ms","map","postData","PostItem","tags","readTime","isUpdated","updated","currentUserId","totalDiscussion","calcTotalDiscussion","comments","totalReaction","calculateReaction","heart","unicorn","saved","alreadySaved","baseRadius","useLocation","scrollTo","useParams","useState","useSelector","state","profileDataLoading","profileDataErr","transformedData","currentUserProfile","find","data","ErrorMessage","offline","Error","filter","draft","pinned","sort","a","b","reduce","count","postItem","claculateWrittenComments","totalPublishPosts","align","flexDir"],"sourceRoot":""}