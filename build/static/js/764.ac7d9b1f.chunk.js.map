{"version":3,"file":"static/js/764.ac7d9b1f.chunk.js","mappings":"oKAuBA,IApBsB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7B,OACG,UAAC,KAAD,CACGC,KAAK,IACLC,GAAI,CAAC,QAAS,QAAS,QACvBC,GAAG,OACHC,aAAa,MACbC,IAAIC,EAAAA,EAAAA,IAAkB,eAAgB,eACtCC,UAAU,SACVC,GAAI,CAAEC,KAAM,eAAgBC,GAAI,oBAChCC,QAAQ,OACRC,WAAW,SACXC,cAAc,SAVjB,WAYG,SAAC,KAAD,CAAMC,UAAU,SAAhB,SAA0Bf,IACzBC,IAGT,C,iJCwDD,UAhEc,WACX,IAAMe,GAAOC,EAAAA,EAAAA,KACPC,EAASF,EAAKE,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,GAIIC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,eAAjB,IAHbA,EADH,EACGA,gBACwBC,EAF3B,EAEGC,uBACoBC,EAHvB,EAGGC,mBAGCC,EAAiB,KAOrB,OANIL,GAAoBC,GAAYE,IACjCE,EAAiBL,EACbM,QAAO,SAACC,GAAD,OAAcA,EAASZ,SAAWA,IAAWY,EAASC,KAAtD,IACPC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,UAAYF,EAAEE,SAA1B,KAGkB,IAA1BP,EAAeQ,QAAiBZ,GAAYE,GAiB7C,SAAC,KAAD,UACIE,GACEA,EAAeS,KAAI,SAACP,GAAD,OAChB,SAAC,IAAD,CAEGQ,KAAMR,EAASQ,KACfC,SAAUT,EAASS,SACnBC,QAASV,EAASU,QAClBC,GAAIX,EAASW,GACbN,UAAWL,EAASK,UACpBnC,MAAO8B,EAAS9B,MAChB0C,KAAMZ,EAASY,KACfC,SAAUb,EAASa,SACnBC,UAAS,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAUe,QACrBC,eAAe,EACf5B,OAAQY,EAASZ,OACjB6B,cAAe/B,EAAKE,OACpB8B,iBAAiBC,EAAAA,EAAAA,IAAoBnB,EAASoB,UAC9CC,eAAeC,EAAAA,EAAAA,IACZtB,EAASuB,MACTvB,EAASwB,QACTxB,EAASyB,QAjBPzB,EAASW,GAFD,OAjBtB,SAAC,IAAD,CACGzC,MAAK,iFADR,UAGG,SAAC,KAAD,CACGM,GAAG,gBACHkD,EAAE,aACFC,QAAS,kBAAMtC,EAAS,eAAf,EAHZ,wCAuCX,C","sources":["components/dashboard/NoDataMessage.jsx","components/dashboard/Posts.jsx"],"sourcesContent":["import { Box, Text, useColorModeValue } from '@chakra-ui/react';\nimport React from 'react';\n\nconst NoDataMessage = ({ title, children }) => {\n   return (\n      <Box\n         flex='1'\n         px={['.5rem', '.5rem', '1rem']}\n         py='7rem'\n         borderRadius='5px'\n         bg={useColorModeValue('light.cardBg', 'dark.cardBg')}\n         className='shadow'\n         ms={{ base: '0 !important', md: '.5rem !important' }}\n         display='flex'\n         alignItems='center'\n         flexDirection='column'\n      >\n         <Text textAlign='center'>{title}</Text>\n         {children}\n      </Box>\n   );\n};\n\nexport default NoDataMessage;\n","import { Box } from '@chakra-ui/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/auth';\nimport {\n   calcTotalDiscussion,\n   calculateReaction,\n} from '../../helper/calculateTotal';\nimport { PrimaryBtn } from '../../utils/Buttons';\nimport PostItem from '../post/PostItem';\nimport NoDataMessage from './NoDataMessage';\n\nconst Posts = () => {\n   const user = useAuth();\n   const userId = user.userId;\n   const navigate = useNavigate();\n\n   const {\n      transformedData,\n      transformedDataLoading: loading,\n      transformedDataErr: err,\n   } = useSelector((state) => state.transformedData);\n\n   let publishedPosts = null;\n   if (transformedData && !loading && !err) {\n      publishedPosts = transformedData\n         .filter((postData) => postData.userId === userId && !postData.draft)\n         .sort((a, b) => b.createdAt - a.createdAt);\n   }\n\n   if (publishedPosts.length === 0 && !loading && !err) {\n      return (\n         <NoDataMessage\n            title={`This is where you can manage your posts, but you haven't written anything yet.`}\n         >\n            <PrimaryBtn\n               bg='light.primary'\n               m='1rem 0 0 0'\n               onClick={() => navigate('/create-post')}\n            >\n               Write your first post now\n            </PrimaryBtn>\n         </NoDataMessage>\n      );\n   }\n\n   return (\n      <Box>\n         {publishedPosts &&\n            publishedPosts.map((postData) => (\n               <PostItem\n                  key={postData.id}\n                  name={postData.name}\n                  username={postData.username}\n                  profile={postData.profile}\n                  id={postData.id}\n                  createdAt={postData.createdAt}\n                  title={postData.title}\n                  tags={postData.tags}\n                  readTime={postData.readTime}\n                  isUpdated={postData?.updated}\n                  fromDashboard={true}\n                  userId={postData.userId}\n                  currentUserId={user.userId} // authenticated userId\n                  totalDiscussion={calcTotalDiscussion(postData.comments)}\n                  totalReaction={calculateReaction(\n                     postData.heart,\n                     postData.unicorn,\n                     postData.saved\n                  )}\n               />\n            ))}\n      </Box>\n   );\n};\n\nexport default Posts;\n"],"names":["title","children","flex","px","py","borderRadius","bg","useColorModeValue","className","ms","base","md","display","alignItems","flexDirection","textAlign","user","useAuth","userId","navigate","useNavigate","useSelector","state","transformedData","loading","transformedDataLoading","err","transformedDataErr","publishedPosts","filter","postData","draft","sort","a","b","createdAt","length","map","name","username","profile","id","tags","readTime","isUpdated","updated","fromDashboard","currentUserId","totalDiscussion","calcTotalDiscussion","comments","totalReaction","calculateReaction","heart","unicorn","saved","m","onClick"],"sourceRoot":""}