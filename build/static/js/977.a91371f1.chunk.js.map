{"version":3,"file":"static/js/977.a91371f1.chunk.js","mappings":"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","sources":["utils/SignUpButton.jsx","utils/signUpBtnDesign.js","hooks/useGenerateUserName.js","pages/SignUp.jsx"],"sourcesContent":["import { HStack, Image, Text } from '@chakra-ui/react';\nimport React from 'react';\n\nconst SignUpButton = ({ bg, logo, type, text, hoverBg, color, onClick }) => {\n   return (\n      <HStack\n         bg={bg}\n         color={color || 'dark.color'}\n         p='.7rem'\n         borderRadius='5px'\n         w='100%'\n         justify='center'\n         align='center'\n         cursor='pointer'\n         _hover={{ bg: hoverBg }}\n         height='48px'\n         transition='.3s'\n         onClick={onClick}\n      >\n         <Image src={logo} alt='icon' />\n         <Text>\n            {type} {text}\n         </Text>\n      </HStack>\n   );\n};\n\nexport default SignUpButton;\n","import { github, twitter, facebook, google } from '../assets/icons';\nimport {\n   FacebookAuthProvider,\n   GithubAuthProvider,\n   GoogleAuthProvider,\n   TwitterAuthProvider,\n} from 'firebase/auth';\n\nconst googleProvider = new GoogleAuthProvider();\nconst facebookProvider = new FacebookAuthProvider();\nconst githubProvider = new GithubAuthProvider();\nconst twitterProvider = new TwitterAuthProvider();\n\nexport const signUpBtnDesigns = [\n   {\n      bg: '#24292e',\n      logo: github,\n      text: 'Github',\n      hoverBg: '#000',\n      signInMethod: githubProvider,\n   },\n   {\n      bg: '#1da1f2',\n      logo: twitter,\n      text: 'Twitter',\n      hoverBg: '#0096f2',\n      signInMethod: twitterProvider,\n   },\n   {\n      bg: '#dbdbdb',\n      logo: google,\n      text: 'Google',\n      hoverBg: '#d9d9d9',\n      color: 'light.color',\n      signInMethod: googleProvider,\n   },\n   {\n      bg: '#1877f2eb',\n      logo: facebook,\n      text: 'Facebook',\n      hoverBg: '#1877F2',\n      signInMethod: facebookProvider,\n   },\n];\n","import { useSelector } from 'react-redux';\n\nconst useGenerateUserName = () => {\n   const { profileData } = useSelector((state) => state.profileData);\n\n   const getRandomNumber = (min, max) => {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n   };\n\n   const getUsername = (username, userId) => {\n      const authenticatedUsernames = [\n         ...new Set(\n            profileData\n               ?.filter(\n                  (userData) =>\n                     userData.id !== userId &&\n                     userData.username?.toLowerCase().split(' ').join('')\n               )\n               .map((data) => data.username)\n         ),\n      ];\n\n      let uinqueUsername = '';\n\n      //recusive func\n      const createUniqueUsername = (nameParam, number = '') => {\n         const name = nameParam + number;\n\n         if (!authenticatedUsernames.includes(name)) {\n            uinqueUsername = name;\n            return;\n         }\n\n         createUniqueUsername(nameParam, getRandomNumber(1, 999));\n      };\n\n      createUniqueUsername(username.toLowerCase().split(' ').join(''));\n\n      return uinqueUsername;\n   };\n\n   return getUsername;\n};\n\nexport default useGenerateUserName;\n","import {\n  Divider,\n  Flex,\n  Heading,\n  Text,\n  useColorModeValue,\n  VStack,\n} from \"@chakra-ui/react\";\nimport React, { useEffect } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport SignUpButton from \"../utils/SignUpButton\";\nimport { signUpBtnDesigns } from \"../utils/signUpBtnDesign\";\nimport { signInWithPopup } from \"firebase/auth\";\nimport { useAuth } from \"../context/auth\";\nimport { auth } from \"../config/firebase\";\nimport { createUser } from \"../lib/api\";\nimport { useState } from \"react\";\nimport useGenerateUserName from \"../hooks/useGenerateUserName\";\nimport { useSelector } from \"react-redux\";\n\nconst SignUp = ({ type }) => {\n  //scroll top\n  useEffect(() => window.scrollTo(0, 0), []);\n\n  const navigate = useNavigate();\n  const getUsername = useGenerateUserName();\n\n  const [signingIn, setSigningIn] = useState(false);\n\n  const { profileData } = useSelector((state) => state.profileData);\n\n  const user = useAuth();\n\n  const cardBg = useColorModeValue(\"light.cardBg\", \"dark.cardBg\");\n  const color = useColorModeValue(\"light.primary\", \"dark.primary\");\n  const dividerColor = useColorModeValue(\"light.cardBorder\", \"dark.cardBorder\");\n\n  if (!signingIn && user) {\n    return <Navigate to=\"/\" />;\n  }\n\n  const signin = (provider) => {\n    setSigningIn(true);\n    signInWithPopup(auth, provider)\n      .then((res) => {\n        const userId = res.user.uid;\n        const authenticatedUser = profileData?.find(\n          (userData) => userData.id === userId\n        );\n\n        const username = authenticatedUser\n          ? authenticatedUser.username\n          : getUsername(res.user.displayName ?? res.user.reloadUserInfo.screenName, userId);\n\n        const userData = {\n          name: res.user.displayName ?? res.user.reloadUserInfo.screenName,\n          username,\n          profile: res.user.photoURL ?? res.user.reloadUserInfo.screenName,\n          createdAt: res.user.metadata.createdAt,\n        };\n\n        createUser(userId, userData)\n          .then((_) => {\n            navigate(-1);\n            console.log(\"created user successfully\");\n          })\n          .catch((err) => {\n            console.log(\"failed to create user\");\n          });\n      })\n      .catch((err) => {\n        setSigningIn(false);\n        console.log(err.message);\n      });\n  };\n\n  return (\n    <VStack mx=\"auto\" justify=\"center\" maxW=\"640px\" flex=\"1\">\n      <VStack\n        bg={cardBg}\n        className=\"shadow\"\n        p={{ base: \"2rem 1rem\", sm: \"3rem\" }}\n        textAlign=\"center\"\n        borderRadius=\"5px\"\n      >\n        <Heading fontSize=\"1.7rem\">Welcome to DEV Community</Heading>\n\n        <Text mb=\"1rem !important\">\n          <Text\n            as=\"span\"\n            color={color}\n            cursor=\"pointer\"\n            onClick={() => navigate(\"/\")}\n          >\n            DEV Community 👩‍💻👨‍💻\n          </Text>{\" \"}\n          is a community of 890,178 amazing developers\n        </Text>\n\n        {signUpBtnDesigns.map((obj) => (\n          <SignUpButton\n            {...obj}\n            onClick={() => signin(obj.signInMethod)}\n            key={obj.logo}\n            type={type === \"login\" ? \"Continue with\" : \"Sign up with\"}\n          />\n        ))}\n\n        {type !== \"login\" && (\n          <Flex w=\"100%\" align=\"center\" mt=\"1.5rem !important\">\n            <Divider flex={1} bg={dividerColor} h=\"1.5px\" />\n            <Text fontSize=\"14px\" mx=\"1rem\">\n              Already have an account?{\" \"}\n              <Text\n                as=\"span\"\n                color={color}\n                cursor=\"pointer\"\n                onClick={() => navigate(\"/login\")}\n              >\n                Log in\n              </Text>\n              .\n            </Text>\n            <Divider flex={1} bg={dividerColor} h=\"1.5px\" />\n          </Flex>\n        )}\n      </VStack>\n    </VStack>\n  );\n};\n\nexport default SignUp;\n"],"names":["bg","logo","type","text","hoverBg","color","onClick","p","borderRadius","w","justify","align","cursor","_hover","height","transition","src","alt","googleProvider","GoogleAuthProvider","facebookProvider","FacebookAuthProvider","githubProvider","GithubAuthProvider","twitterProvider","TwitterAuthProvider","signUpBtnDesigns","github","signInMethod","twitter","google","facebook","profileData","useSelector","state","getRandomNumber","min","max","Math","floor","random","username","userId","authenticatedUsernames","Set","filter","userData","id","toLowerCase","split","join","map","data","uinqueUsername","createUniqueUsername","nameParam","number","name","includes","useEffect","window","scrollTo","navigate","useNavigate","getUsername","useGenerateUserName","useState","signingIn","setSigningIn","user","useAuth","cardBg","useColorModeValue","dividerColor","to","mx","maxW","flex","className","base","sm","textAlign","fontSize","mb","as","obj","provider","signInWithPopup","auth","then","res","uid","authenticatedUser","find","displayName","reloadUserInfo","screenName","profile","photoURL","createdAt","metadata","createUser","_","console","log","catch","err","message","key","mt","h"],"sourceRoot":""}