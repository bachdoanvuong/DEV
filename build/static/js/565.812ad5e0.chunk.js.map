{"version":3,"file":"static/js/565.812ad5e0.chunk.js","mappings":"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","sources":["hooks/useFollowTag.js","../node_modules/@chakra-ui/tag/dist/chakra-ui-tag.esm.js","pages/tags/TagCard.jsx","components/skeletons/TagCardSkeleton.jsx","pages/tags/Tags.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from '../context/auth';\nimport { updateProfileData } from '../lib/api';\nimport { setLoginAlert } from '../store/loginAlert';\n\nconst useFollowTag = (profileData) => {\n   const user = useAuth();\n   const userId = user?.userId;\n   const dispatch = useDispatch();\n\n   const [loading, setLoading] = useState(false);\n\n   const followTagHandler = async (tagName) => {\n      if (!user) {\n         dispatch(setLoginAlert(true));\n         return;\n      }\n\n      setLoading(true);\n\n      const currentUserProfile = profileData.find((data) => data.id === userId);\n\n      const tags = currentUserProfile.followingTags || [];\n\n      const transformedFollowingTags = tags.includes(tagName)\n         ? tags.filter((tagname) => tagname !== tagName)\n         : [...tags, tagName];\n\n      updateProfileData({ followingTags: transformedFollowingTags }, userId)\n         .then((_) => {\n            setLoading(false);\n            // console.log('followed tag successfully');\n         })\n         .catch((err) => {\n            setLoading(false);\n            console.log(err);\n         });\n   };\n\n   return { followTagHandler, loading };\n};\n\nexport default useFollowTag;\n","import { Icon } from '@chakra-ui/icon';\nimport { createStylesContext, forwardRef, useMultiStyleConfig, omitThemingProps, chakra } from '@chakra-ui/system';\nimport { __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar _excluded = [\"isDisabled\", \"children\"];\n\nvar _createStylesContext = createStylesContext(\"Tag\"),\n    StylesProvider = _createStylesContext[0],\n    useStyles = _createStylesContext[1];\n\nvar useTagStyles = useStyles;\n\n/**\n * The tag component is used to label or categorize UI elements.\n * To style the tag globally, change the styles in `theme.components.Tag`\n * @see Docs https://chakra-ui.com/tag\n */\nvar Tag = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Tag\", props);\n  var ownProps = omitThemingProps(props);\n\n  var containerStyles = _extends({\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\"\n  }, styles.container);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref\n  }, ownProps, {\n    __css: containerStyles\n  })));\n});\n\nif (__DEV__) {\n  Tag.displayName = \"Tag\";\n}\n\nvar TagLabel = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({\n    ref: ref,\n    noOfLines: 1\n  }, props, {\n    __css: styles.label\n  }));\n});\n\nif (__DEV__) {\n  TagLabel.displayName = \"TagLabel\";\n}\n\nvar TagLeftIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    verticalAlign: \"top\",\n    marginEnd: \"0.5rem\"\n  }, props));\n});\n\nif (__DEV__) {\n  TagLeftIcon.displayName = \"TagLeftIcon\";\n}\n\nvar TagRightIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    verticalAlign: \"top\",\n    marginStart: \"0.5rem\"\n  }, props));\n});\n\nif (__DEV__) {\n  TagRightIcon.displayName = \"TagRightIcon\";\n}\n\nvar TagCloseIcon = function TagCloseIcon(props) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    verticalAlign: \"inherit\",\n    viewBox: \"0 0 512 512\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  }));\n};\n\nif (__DEV__) {\n  TagCloseIcon.displayName = \"TagCloseIcon\";\n}\n\n/**\n * TagCloseButton is used to close \"remove\" the tag\n * @see Docs https://chakra-ui.com/tag\n */\nvar TagCloseButton = function TagCloseButton(props) {\n  var isDisabled = props.isDisabled,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var styles = useStyles();\n\n  var btnStyles = _extends({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    outline: \"0\"\n  }, styles.closeButton);\n\n  return /*#__PURE__*/React.createElement(chakra.button, _extends({\n    \"aria-label\": \"close\"\n  }, rest, {\n    type: \"button\",\n    disabled: isDisabled,\n    __css: btnStyles\n  }), children || /*#__PURE__*/React.createElement(TagCloseIcon, null));\n};\n\nif (__DEV__) {\n  TagCloseButton.displayName = \"TagCloseButton\";\n}\n\nexport { Tag, TagCloseButton, TagLabel, TagLeftIcon, TagRightIcon, useTagStyles };\n","import {\n   Box,\n   Button,\n   Image,\n   Tag,\n   Text,\n   useColorModeValue,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/auth';\nimport useFollowTag from '../../hooks/useFollowTag';\nimport { LightBtn } from '../../utils/Buttons.jsx';\n\nconst TagCard = ({\n   brandColor,\n   tagName,\n   description,\n   logo,\n   publishedPosts,\n   profileData,\n   profileDataLoading,\n   borderTopWidth,\n   hideFollowBtn,\n   lineClamp,\n}) => {\n   const navigate = useNavigate();\n   const user = useAuth();\n   const userId = user?.userId;\n\n   const handleViewTag = () => {\n      navigate(`/tags/${tagName}`);\n   };\n\n   const { followTagHandler, loading } = useFollowTag(profileData);\n\n   const handleClickFollow = () => followTagHandler(tagName);\n\n   const currentUserProfile = profileData?.find((data) => data.id === userId);\n   const alreadyFollow = currentUserProfile?.followingTags?.includes(tagName);\n\n   const labelColor = useColorModeValue('#717171', '#a3a3a3');\n\n   return (\n      <Box\n         borderRadius='5px'\n         bg={useColorModeValue('light.cardBg', 'dark.cardBg')}\n         className='shadow'\n         borderTop={`${borderTopWidth || '1rem'} solid ${brandColor}`}\n         p={{ base: '.7rem', md: '1rem' }}\n         position='relative'\n      >\n         <Tag\n            border='1px solid'\n            borderColor={useColorModeValue('gray.100', 'gray.700')}\n            bg='transparent'\n            _hover={{\n               borderColor: useColorModeValue('gray.300', 'gray.600'),\n            }}\n            borderRadius='5px'\n            cursor='pointer'\n            h='35px'\n            fontWeight={700}\n            fontSize='1.1rem'\n            mb={1}\n            onClick={handleViewTag}\n         >\n            <Text color={brandColor}>#</Text>\n            {tagName}\n         </Tag>\n\n         <Text\n            overflow='hidden'\n            display='-webkit-box'\n            sx={{\n               WebkitLineClamp: lineClamp || '3',\n               WebkitBoxOrient: 'vertical',\n            }}\n         >\n            {description}\n         </Text>\n\n         {publishedPosts ? (\n            <Text fontSize='15px' mt={3} mb={6} color={labelColor}>\n               {publishedPosts} {publishedPosts > 1 ? 'posts' : 'post'}{' '}\n               published\n            </Text>\n         ) : (\n            <Text py={7} />\n         )}\n\n         {!profileDataLoading && !hideFollowBtn && (\n            <>\n               {alreadyFollow ? (\n                  <LightBtn\n                     w='auto'\n                     m='0'\n                     disabled={loading}\n                     onClick={handleClickFollow}\n                  >\n                     Following\n                  </LightBtn>\n               ) : (\n                  <Button\n                     fontWeight={400}\n                     onClick={handleClickFollow}\n                     disabled={loading}\n                  >\n                     Follow\n                  </Button>\n               )}\n            </>\n         )}\n\n         {logo && (\n            <Image\n               src={logo}\n               w='60px'\n               h='60px'\n               pos='absolute'\n               bottom='5px'\n               right='5px'\n               alt='tag_logo'\n            />\n         )}\n      </Box>\n   );\n};\n\nexport default TagCard;\n","import { Skeleton } from '@chakra-ui/react';\nimport React from 'react';\nimport useSkeletonColor from '../../hooks/useSkeletonColor';\n\nconst TagCardSkeleton = () => {\n   const skeletonColor = useSkeletonColor();\n\n   return (\n      <Skeleton\n         borderRadius='5px'\n         h={{ base: '180px', md: '210px' }}\n         {...skeletonColor}\n      />\n   );\n};\n\nexport default TagCardSkeleton;\n","import React, { useEffect } from 'react';\nimport {\n   Box,\n   Button,\n   Flex,\n   Heading,\n   HStack,\n   useColorModeValue,\n} from '@chakra-ui/react';\nimport TagCard from './TagCard';\nimport { nanoid } from '@reduxjs/toolkit';\nimport SearchInput from '../../components/search/SearchInput';\nimport { useNavigate } from 'react-router-dom';\nimport { useRef } from 'react';\nimport useGetQuerySearchTerm from '../../hooks/useGetQuerySearchTerm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ErrorMessage from '../../utils/ErrorMessage';\nimport TagCardSkeleton from '../../components/skeletons/TagCardSkeleton';\nimport { getPopularTags } from '../../helper/getPopularTags';\nimport { useAuth } from '../../context/auth';\nimport { setLoginAlert } from '../../store/loginAlert';\n\nconst Tags = () => {\n   // scroll top\n   useEffect(() => window.scrollTo(0, 0), []);\n\n   const user = useAuth();\n   const searchInputRef = useRef();\n\n   const navigate = useNavigate();\n   const dispatch = useDispatch();\n\n   const querySearchTerm = useGetQuerySearchTerm('stq') || '';\n\n   const {\n      transformedData,\n      transformedDataLoading: loading,\n      transformedDataErr: err,\n   } = useSelector((state) => state.transformedData);\n\n   const { profileData, profileDataLoading } = useSelector(\n      (state) => state.profileData\n   );\n\n   const cardBg = useColorModeValue('light.cardBG', 'dark.cardBg');\n\n   if (err) {\n      return <ErrorMessage offline={true} />;\n   }\n\n   const popularTags = getPopularTags(transformedData);\n\n   const filteredTags = popularTags\n      .filter((tag) => tag.tagName.includes(querySearchTerm))\n      .splice(0, 30); // limit top tags to 30;\n\n   const handleClickFollowingTags = () => {\n      if (!user) {\n         dispatch(setLoginAlert(true));\n         return;\n      }\n\n      navigate('/dashboard/following_tags');\n   };\n\n   return (\n      <Box flex='1' w='100%' maxW='1280px' px={{ base: '.5rem', md: '1rem' }}>\n         <Flex\n            justify='space-between'\n            flexDirection={{ base: 'column', md: 'row' }}\n            mb={5}\n         >\n            <Heading\n               fontSize={{ base: '1.5rem', md: '2rem' }}\n               mb={{ base: '.5rem', md: 0 }}\n            >\n               Top Tags\n            </Heading>\n\n            <HStack>\n               <SearchInput\n                  ref={searchInputRef}\n                  querySearchTerm={querySearchTerm}\n                  px='0'\n                  placeholder='Search for tag'\n                  route='tags'\n                  flex='1'\n               />\n\n               <Button fontWeight='400' onClick={handleClickFollowingTags}>\n                  Following tags\n               </Button>\n            </HStack>\n         </Flex>\n\n         {!loading && filteredTags.length === 0 ? (\n            <Box\n               p='3rem .5rem'\n               textAlign='center'\n               w='100%'\n               className='shadow'\n               bg={cardBg}\n               borderRadius='5px'\n            >\n               No results match that query\n            </Box>\n         ) : (\n            <Box\n               display='grid'\n               gap={{ base: '.5rem', md: '1rem' }}\n               gridTemplateColumns={{\n                  md: 'repeat(2, minmax(0, 1fr))',\n                  xl: 'repeat(3, minmax(0, 1fr))',\n               }}\n            >\n               {loading && (\n                  <>\n                     <TagCardSkeleton />\n                     <TagCardSkeleton />\n                     <TagCardSkeleton />\n                     <TagCardSkeleton />\n                     <TagCardSkeleton />\n                     <TagCardSkeleton />\n                  </>\n               )}\n\n               {filteredTags.map((tag) => (\n                  <TagCard\n                     {...tag}\n                     key={nanoid()}\n                     profileData={profileData}\n                     profileDataLoading={profileDataLoading}\n                  />\n               ))}\n            </Box>\n         )}\n      </Box>\n   );\n};\n\nexport default Tags;\n"],"names":["profileData","user","useAuth","userId","dispatch","useDispatch","useState","loading","setLoading","followTagHandler","tagName","setLoginAlert","currentUserProfile","find","data","id","tags","followingTags","transformedFollowingTags","includes","filter","tagname","updateProfileData","then","_","catch","err","console","log","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_createStylesContext","createStylesContext","StylesProvider","useStyles","Tag","forwardRef","props","ref","styles","useMultiStyleConfig","ownProps","omitThemingProps","containerStyles","display","verticalAlign","alignItems","maxWidth","container","React","value","chakra","__css","__DEV__","displayName","TagLabel","noOfLines","label","TagLeftIcon","Icon","marginEnd","TagRightIcon","marginStart","TagCloseIcon","viewBox","fill","d","brandColor","description","logo","publishedPosts","profileDataLoading","borderTopWidth","hideFollowBtn","lineClamp","navigate","useNavigate","useFollowTag","handleClickFollow","alreadyFollow","labelColor","useColorModeValue","borderRadius","bg","className","borderTop","p","base","md","position","border","borderColor","_hover","cursor","h","fontWeight","fontSize","mb","onClick","color","overflow","sx","WebkitLineClamp","WebkitBoxOrient","mt","py","w","m","disabled","src","pos","bottom","right","alt","skeletonColor","useSkeletonColor","useEffect","window","scrollTo","searchInputRef","useRef","querySearchTerm","useGetQuerySearchTerm","useSelector","state","transformedData","transformedDataLoading","transformedDataErr","cardBg","ErrorMessage","offline","filteredTags","getPopularTags","tag","splice","flex","maxW","px","justify","flexDirection","SearchInput","placeholder","route","gap","gridTemplateColumns","xl","map","TagCard","nanoid","textAlign"],"sourceRoot":""}